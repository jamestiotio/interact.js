{
	"version": 3,
	"names": [
		"domUtils",
		"extend",
		"getOriginXY",
		"is",
		"normalizeListeners",
		"pointerUtils",
		"drag",
		"DropEvent",
		"install",
		"scope",
		"actions",
		"interactStatic",
		"interact",
		"Interactable",
		"defaults",
		"usePlugin",
		"prototype",
		"dropzone",
		"options",
		"dropzoneMethod",
		"dropCheck",
		"dragEvent",
		"event",
		"draggable",
		"draggableElement",
		"dropElement",
		"rect",
		"dropCheckMethod",
		"dynamicDrop",
		"newValue",
		"bool",
		"phaselessTypes",
		"dragenter",
		"dragleave",
		"dropactivate",
		"dropdeactivate",
		"dropmove",
		"drop",
		"methodDict",
		"collectDrops",
		"interactables",
		"drops",
		"list",
		"enabled",
		"accept",
		"element",
		"string",
		"matchesSelector",
		"func",
		"dropElements",
		"target",
		"_context",
		"querySelectorAll",
		"array",
		"dropzoneElement",
		"push",
		"getRect",
		"fireActivationEvents",
		"activeDrops",
		"slice",
		"fire",
		"propagationStopped",
		"immediatePropagationStopped",
		"getActiveDrops",
		"dragElement",
		"activeDrop",
		"getDrop",
		"dropState",
		"interactable",
		"pointerEvent",
		"validDrops",
		"isValid",
		"dropIndex",
		"indexOfDeepestElement",
		"getDropEvents",
		"interaction",
		"_pointerEvent",
		"dropEvents",
		"enter",
		"leave",
		"activate",
		"deactivate",
		"move",
		"type",
		"rejected",
		"cur",
		"prev",
		"dragLeave",
		"prevDropzone",
		"dragEnter",
		"relatedTarget",
		"fireDropEvents",
		"events",
		"onEventCreated",
		"iEvent",
		"dropResult",
		"object",
		"listeners",
		"normalized",
		"corrected",
		"Object",
		"keys",
		"reduce",
		"acc",
		"correctedType",
		"test",
		"prevListeners",
		"off",
		"on",
		"ondrop",
		"ondropactivate",
		"ondropdeactivate",
		"ondragenter",
		"ondragleave",
		"ondropmove",
		"overlap",
		"number",
		"Math",
		"max",
		"min",
		"checker",
		"dropped",
		"dropOverlap",
		"origin",
		"page",
		"getPageXY",
		"x",
		"y",
		"horizontal",
		"left",
		"right",
		"vertical",
		"top",
		"bottom",
		"dragRect",
		"cx",
		"width",
		"cy",
		"height",
		"overlapArea",
		"overlapRatio",
		"id",
		"prepared",
		"name",
		"arg"
	],
	"sources": [
		"plugin.ts"
	],
	"sourcesContent": [
		"import type { EventPhase, InteractEvent } from '@interactjs/core/InteractEvent'\nimport type { Interactable } from '@interactjs/core/Interactable'\nimport type { Interaction, DoPhaseArg } from '@interactjs/core/Interaction'\nimport type { PerActionDefaults } from '@interactjs/core/options'\nimport type { Scope, Plugin } from '@interactjs/core/scope'\nimport type { Element, PointerEventType, Rect, ListenersArg } from '@interactjs/core/types'\nimport * as domUtils from '@interactjs/utils/domUtils'\nimport extend from '@interactjs/utils/extend'\nimport getOriginXY from '@interactjs/utils/getOriginXY'\nimport is from '@interactjs/utils/is'\nimport normalizeListeners from '@interactjs/utils/normalizeListeners'\nimport * as pointerUtils from '@interactjs/utils/pointerUtils'\n\n/* eslint-disable import/no-duplicates -- for typescript module augmentations */\nimport '../drag/plugin'\n\nimport type { DragEvent } from '../drag/plugin'\nimport drag from '../drag/plugin'\n/* eslint-enable import/no-duplicates */\n\nimport { DropEvent } from './DropEvent'\n\nexport type DropFunctionChecker = (\n  dragEvent: any, // related drag operation\n  event: any, // touch or mouse EventEmitter\n  dropped: boolean, // default checker result\n  dropzone: Interactable, // dropzone interactable\n  dropElement: Element, // drop zone element\n  draggable: Interactable, // draggable's Interactable\n  draggableElement: Element, // dragged element\n) => boolean\n\nexport interface DropzoneOptions extends PerActionDefaults {\n  accept?:\n  | string\n  | Element\n  | (({ dropzone, draggableElement }: { dropzone: Interactable, draggableElement: Element }) => boolean)\n  // How the overlap is checked on the drop zone\n  overlap?: 'pointer' | 'center' | number\n  checker?: DropFunctionChecker\n\n  ondropactivate?: ListenersArg\n  ondropdeactivate?: ListenersArg\n  ondragenter?: ListenersArg\n  ondragleave?: ListenersArg\n  ondropmove?: ListenersArg\n  ondrop?: ListenersArg\n}\n\nexport interface DropzoneMethod {\n  (this: Interactable, options: DropzoneOptions | boolean): Interactable\n  (): DropzoneOptions\n}\n\ndeclare module '@interactjs/core/Interactable' {\n  interface Interactable {\n    dropzone: DropzoneMethod\n    dropCheck: (\n      dragEvent: InteractEvent,\n      event: PointerEventType,\n      draggable: Interactable,\n      draggableElement: Element,\n      dropElemen: Element,\n      rect: any,\n    ) => boolean\n  }\n}\n\ndeclare module '@interactjs/core/Interaction' {\n  interface Interaction {\n    dropState?: DropState\n  }\n}\n\ndeclare module '@interactjs/core/InteractEvent' {\n  interface InteractEvent {\n    prevDropzone?: Interactable\n    dropzone?: Interactable\n    dragEnter?: Element\n    dragLeave?: Element\n  }\n}\n\ndeclare module '@interactjs/core/options' {\n  interface ActionDefaults {\n    drop: DropzoneOptions\n  }\n}\n\ndeclare module '@interactjs/core/scope' {\n  interface Scope {\n    dynamicDrop?: boolean\n  }\n\n  interface SignalArgs {\n    'actions/drop:start': DropSignalArg\n    'actions/drop:move': DropSignalArg\n    'actions/drop:end': DropSignalArg\n  }\n}\n\ndeclare module '@interactjs/core/types' {\n  interface ActionMap {\n    drop?: typeof drop\n  }\n}\n\ndeclare module '@interactjs/core/InteractStatic' {\n  interface InteractStatic {\n    dynamicDrop: (this: InteractStatic, newValue?: boolean) => boolean | this\n  }\n}\n\ninterface DropSignalArg {\n  interaction: Interaction<'drag'>\n  dragEvent: DragEvent\n}\n\nexport interface ActiveDrop {\n  dropzone: Interactable\n  element: Element\n  rect: Rect\n}\n\nexport interface DropState {\n  cur: {\n    // the dropzone a drag target might be dropped into\n    dropzone: Interactable\n    // the element at the time of checking\n    element: Element\n  }\n  prev: {\n    // the dropzone that was recently dragged away from\n    dropzone: Interactable\n    // the element at the time of checking\n    element: Element\n  }\n  // wheather the potential drop was rejected from a listener\n  rejected: boolean\n  // the drop events related to the current drag event\n  events: FiredDropEvents\n  activeDrops: ActiveDrop[]\n}\n\nfunction install (scope: Scope) {\n  const {\n    actions,\n    /** @lends module:interact */\n    interactStatic: interact,\n    /** @lends Interactable */\n    Interactable,\n    defaults,\n  } = scope\n\n  scope.usePlugin(drag)\n\n  /**\n   *\n   * ```js\n   * interact('.drop').dropzone({\n   *   accept: '.can-drop' || document.getElementById('single-drop'),\n   *   overlap: 'pointer' || 'center' || zeroToOne\n   * }\n   * ```\n   *\n   * Returns or sets whether draggables can be dropped onto this target to\n   * trigger drop events\n   *\n   * Dropzones can receive the following events:\n   *  - `dropactivate` and `dropdeactivate` when an acceptable drag starts and ends\n   *  - `dragenter` and `dragleave` when a draggable enters and leaves the dropzone\n   *  - `dragmove` when a draggable that has entered the dropzone is moved\n   *  - `drop` when a draggable is dropped into this dropzone\n   *\n   * Use the `accept` option to allow only elements that match the given CSS\n   * selector or element. The value can be:\n   *\n   *  - **an Element** - only that element can be dropped into this dropzone.\n   *  - **a string**, - the element being dragged must match it as a CSS selector.\n   *  - **`null`** - accept options is cleared - it accepts any element.\n   *\n   * Use the `overlap` option to set how drops are checked for. The allowed\n   * values are:\n   *\n   *   - `'pointer'`, the pointer must be over the dropzone (default)\n   *   - `'center'`, the draggable element's center must be over the dropzone\n   *   - a number from 0-1 which is the `(intersection area) / (draggable area)`.\n   *   e.g. `0.5` for drop to happen when half of the area of the draggable is\n   *   over the dropzone\n   *\n   * Use the `checker` option to specify a function to check if a dragged element\n   * is over this Interactable.\n   *\n   * @param {boolean | object | null} [options] The new options to be set.\n   * @return {object | Interactable} The current setting or this Interactable\n   */\n  Interactable.prototype.dropzone = function (this: Interactable, options) {\n    return dropzoneMethod(this, options)\n  } as Interactable['dropzone']\n\n  /**\n   * ```js\n   * interact(target)\n   * .dropChecker(function(dragEvent,         // related dragmove or dragend event\n   *                       event,             // TouchEvent/PointerEvent/MouseEvent\n   *                       dropped,           // bool result of the default checker\n   *                       dropzone,          // dropzone Interactable\n   *                       dropElement,       // dropzone elemnt\n   *                       draggable,         // draggable Interactable\n   *                       draggableElement) {// draggable element\n   *\n   *   return dropped && event.target.hasAttribute('allow-drop')\n   * }\n   * ```\n   */\n  Interactable.prototype.dropCheck = function (\n    this: Interactable,\n    dragEvent,\n    event,\n    draggable,\n    draggableElement,\n    dropElement,\n    rect,\n  ) {\n    return dropCheckMethod(this, dragEvent, event, draggable, draggableElement, dropElement, rect)\n  }\n\n  /**\n   * Returns or sets whether the dimensions of dropzone elements are calculated\n   * on every dragmove or only on dragstart for the default dropChecker\n   *\n   * @param {boolean} [newValue] True to check on each move. False to check only\n   * before start\n   * @return {boolean | interact} The current setting or interact\n   */\n  interact.dynamicDrop = function (newValue?: boolean) {\n    if (is.bool(newValue)) {\n      // if (dragging && scope.dynamicDrop !== newValue && !newValue) {\n      //  calcRects(dropzones)\n      // }\n\n      scope.dynamicDrop = newValue\n\n      return interact\n    }\n    return scope.dynamicDrop!\n  }\n\n  extend(actions.phaselessTypes, {\n    dragenter: true,\n    dragleave: true,\n    dropactivate: true,\n    dropdeactivate: true,\n    dropmove: true,\n    drop: true,\n  })\n  actions.methodDict.drop = 'dropzone'\n\n  scope.dynamicDrop = false\n\n  defaults.actions.drop = drop.defaults\n}\n\nfunction collectDrops ({ interactables }: Scope, draggableElement: Element) {\n  const drops: ActiveDrop[] = []\n\n  // collect all dropzones and their elements which qualify for a drop\n  for (const dropzone of interactables.list) {\n    if (!dropzone.options.drop.enabled) {\n      continue\n    }\n\n    const accept = dropzone.options.drop.accept\n\n    // test the draggable draggableElement against the dropzone's accept setting\n    if (\n      (is.element(accept) && accept !== draggableElement) ||\n      (is.string(accept) && !domUtils.matchesSelector(draggableElement, accept)) ||\n      (is.func(accept) && !accept({ dropzone, draggableElement }))\n    ) {\n      continue\n    }\n\n    // query for new elements if necessary\n    const dropElements = (\n      is.string(dropzone.target)\n        ? dropzone._context.querySelectorAll(dropzone.target)\n        : is.array(dropzone.target)\n          ? dropzone.target\n          : [dropzone.target]\n    ) as Element[]\n\n    for (const dropzoneElement of dropElements) {\n      if (dropzoneElement !== draggableElement) {\n        drops.push({\n          dropzone,\n          element: dropzoneElement,\n          rect: dropzone.getRect(dropzoneElement),\n        })\n      }\n    }\n  }\n\n  return drops\n}\n\nfunction fireActivationEvents (activeDrops: ActiveDrop[], event: DropEvent) {\n  // loop through all active dropzones and trigger event\n  for (const { dropzone, element } of activeDrops.slice()) {\n    event.dropzone = dropzone\n\n    // set current element as event target\n    event.target = element\n    dropzone.fire(event)\n    event.propagationStopped = event.immediatePropagationStopped = false\n  }\n}\n\n// return a new array of possible drops. getActiveDrops should always be\n// called when a drag has just started or a drag event happens while\n// dynamicDrop is true\nfunction getActiveDrops (scope: Scope, dragElement: Element) {\n  // get dropzones and their elements that could receive the draggable\n  const activeDrops = collectDrops(scope, dragElement)\n\n  for (const activeDrop of activeDrops) {\n    activeDrop.rect = activeDrop.dropzone.getRect(activeDrop.element)\n  }\n\n  return activeDrops\n}\n\nfunction getDrop (\n  { dropState, interactable: draggable, element: dragElement }: Interaction,\n  dragEvent,\n  pointerEvent,\n) {\n  const validDrops: Element[] = []\n\n  // collect all dropzones and their elements which qualify for a drop\n  for (const { dropzone, element: dropzoneElement, rect } of dropState.activeDrops) {\n    const isValid = dropzone.dropCheck(\n      dragEvent,\n      pointerEvent,\n      draggable!,\n      dragElement!,\n      dropzoneElement,\n      rect,\n    )\n    validDrops.push(isValid ? dropzoneElement : null)\n  }\n\n  // get the most appropriate dropzone based on DOM depth and order\n  const dropIndex = domUtils.indexOfDeepestElement(validDrops)\n\n  return dropState!.activeDrops[dropIndex] || null\n}\n\nfunction getDropEvents (interaction: Interaction, _pointerEvent, dragEvent: DragEvent) {\n  const dropState = interaction.dropState!\n  const dropEvents: Record<string, DropEvent | null> = {\n    enter: null,\n    leave: null,\n    activate: null,\n    deactivate: null,\n    move: null,\n    drop: null,\n  }\n\n  if (dragEvent.type === 'dragstart') {\n    dropEvents.activate = new DropEvent(dropState, dragEvent, 'dropactivate')\n\n    dropEvents.activate.target = null as never\n    dropEvents.activate.dropzone = null as never\n  }\n  if (dragEvent.type === 'dragend') {\n    dropEvents.deactivate = new DropEvent(dropState, dragEvent, 'dropdeactivate')\n\n    dropEvents.deactivate.target = null as never\n    dropEvents.deactivate.dropzone = null as never\n  }\n\n  if (dropState.rejected) {\n    return dropEvents\n  }\n\n  if (dropState.cur.element !== dropState.prev.element) {\n    // if there was a previous dropzone, create a dragleave event\n    if (dropState.prev.dropzone) {\n      dropEvents.leave = new DropEvent(dropState, dragEvent, 'dragleave')\n\n      dragEvent.dragLeave = dropEvents.leave.target = dropState.prev.element\n      dragEvent.prevDropzone = dropEvents.leave.dropzone = dropState.prev.dropzone\n    }\n    // if dropzone is not null, create a dragenter event\n    if (dropState.cur.dropzone) {\n      dropEvents.enter = new DropEvent(dropState, dragEvent, 'dragenter')\n\n      dragEvent.dragEnter = dropState.cur.element\n      dragEvent.dropzone = dropState.cur.dropzone\n    }\n  }\n\n  if (dragEvent.type === 'dragend' && dropState.cur.dropzone) {\n    dropEvents.drop = new DropEvent(dropState, dragEvent, 'drop')\n\n    dragEvent.dropzone = dropState.cur.dropzone\n    dragEvent.relatedTarget = dropState.cur.element\n  }\n  if (dragEvent.type === 'dragmove' && dropState.cur.dropzone) {\n    dropEvents.move = new DropEvent(dropState, dragEvent, 'dropmove')\n\n    dragEvent.dropzone = dropState.cur.dropzone\n  }\n\n  return dropEvents\n}\n\ntype FiredDropEvents = Partial<\nRecord<'leave' | 'enter' | 'move' | 'drop' | 'activate' | 'deactivate', DropEvent>\n>\n\nfunction fireDropEvents (interaction: Interaction, events: FiredDropEvents) {\n  const dropState = interaction.dropState!\n  const { activeDrops, cur, prev } = dropState\n\n  if (events.leave) {\n    prev.dropzone.fire(events.leave)\n  }\n  if (events.enter) {\n    cur.dropzone.fire(events.enter)\n  }\n  if (events.move) {\n    cur.dropzone.fire(events.move)\n  }\n  if (events.drop) {\n    cur.dropzone.fire(events.drop)\n  }\n\n  if (events.deactivate) {\n    fireActivationEvents(activeDrops, events.deactivate)\n  }\n\n  dropState.prev.dropzone = cur.dropzone\n  dropState.prev.element = cur.element\n}\n\nfunction onEventCreated ({ interaction, iEvent, event }: DoPhaseArg<'drag', EventPhase>, scope: Scope) {\n  if (iEvent.type !== 'dragmove' && iEvent.type !== 'dragend') {\n    return\n  }\n\n  const dropState = interaction.dropState!\n\n  if (scope.dynamicDrop) {\n    dropState.activeDrops = getActiveDrops(scope, interaction.element!)\n  }\n\n  const dragEvent = iEvent\n  const dropResult = getDrop(interaction, dragEvent, event)\n\n  // update rejected status\n  dropState.rejected =\n    dropState.rejected &&\n    !!dropResult &&\n    dropResult.dropzone === dropState.cur.dropzone &&\n    dropResult.element === dropState.cur.element\n\n  dropState.cur.dropzone = dropResult && dropResult.dropzone\n  dropState.cur.element = dropResult && dropResult.element\n\n  dropState.events = getDropEvents(interaction, event, dragEvent)\n}\n\nfunction dropzoneMethod(interactable: Interactable): DropzoneOptions\nfunction dropzoneMethod(interactable: Interactable, options: DropzoneOptions | boolean): Interactable\nfunction dropzoneMethod (interactable: Interactable, options?: DropzoneOptions | boolean) {\n  if (is.object(options)) {\n    interactable.options.drop.enabled = options.enabled !== false\n\n    if (options.listeners) {\n      const normalized = normalizeListeners(options.listeners)\n      // rename 'drop' to '' as it will be prefixed with 'drop'\n      const corrected = Object.keys(normalized).reduce((acc, type) => {\n        const correctedType = /^(enter|leave)/.test(type)\n          ? `drag${type}`\n          : /^(activate|deactivate|move)/.test(type)\n            ? `drop${type}`\n            : type\n\n        acc[correctedType] = normalized[type]\n\n        return acc\n      }, {})\n\n      const prevListeners = interactable.options.drop.listeners\n      prevListeners && interactable.off(prevListeners)\n\n      interactable.on(corrected)\n      interactable.options.drop.listeners = corrected\n    }\n\n    if (is.func(options.ondrop)) {\n      interactable.on('drop', options.ondrop)\n    }\n    if (is.func(options.ondropactivate)) {\n      interactable.on('dropactivate', options.ondropactivate)\n    }\n    if (is.func(options.ondropdeactivate)) {\n      interactable.on('dropdeactivate', options.ondropdeactivate)\n    }\n    if (is.func(options.ondragenter)) {\n      interactable.on('dragenter', options.ondragenter)\n    }\n    if (is.func(options.ondragleave)) {\n      interactable.on('dragleave', options.ondragleave)\n    }\n    if (is.func(options.ondropmove)) {\n      interactable.on('dropmove', options.ondropmove)\n    }\n\n    if (/^(pointer|center)$/.test(options.overlap as string)) {\n      interactable.options.drop.overlap = options.overlap\n    } else if (is.number(options.overlap)) {\n      interactable.options.drop.overlap = Math.max(Math.min(1, options.overlap), 0)\n    }\n    if ('accept' in options) {\n      interactable.options.drop.accept = options.accept\n    }\n    if ('checker' in options) {\n      interactable.options.drop.checker = options.checker\n    }\n\n    return interactable\n  }\n\n  if (is.bool(options)) {\n    interactable.options.drop.enabled = options\n\n    return interactable\n  }\n\n  return interactable.options.drop\n}\n\nfunction dropCheckMethod (\n  interactable: Interactable,\n  dragEvent: InteractEvent,\n  event: PointerEventType,\n  draggable: Interactable,\n  draggableElement: Element,\n  dropElement: Element,\n  rect: any,\n) {\n  let dropped = false\n\n  // if the dropzone has no rect (eg. display: none)\n  // call the custom dropChecker or just return false\n  if (!(rect = rect || interactable.getRect(dropElement))) {\n    return interactable.options.drop.checker\n      ? interactable.options.drop.checker(\n        dragEvent,\n        event,\n        dropped,\n        interactable,\n        dropElement,\n        draggable,\n        draggableElement,\n      )\n      : false\n  }\n\n  const dropOverlap = interactable.options.drop.overlap\n\n  if (dropOverlap === 'pointer') {\n    const origin = getOriginXY(draggable, draggableElement, 'drag')\n    const page = pointerUtils.getPageXY(dragEvent)\n\n    page.x += origin.x\n    page.y += origin.y\n\n    const horizontal = page.x > rect.left && page.x < rect.right\n    const vertical = page.y > rect.top && page.y < rect.bottom\n\n    dropped = horizontal && vertical\n  }\n\n  const dragRect = draggable.getRect(draggableElement)\n\n  if (dragRect && dropOverlap === 'center') {\n    const cx = dragRect.left + dragRect.width / 2\n    const cy = dragRect.top + dragRect.height / 2\n\n    dropped = cx >= rect.left && cx <= rect.right && cy >= rect.top && cy <= rect.bottom\n  }\n\n  if (dragRect && is.number(dropOverlap)) {\n    const overlapArea =\n      Math.max(0, Math.min(rect.right, dragRect.right) - Math.max(rect.left, dragRect.left)) *\n      Math.max(0, Math.min(rect.bottom, dragRect.bottom) - Math.max(rect.top, dragRect.top))\n\n    const overlapRatio = overlapArea / (dragRect.width * dragRect.height)\n\n    dropped = overlapRatio >= dropOverlap\n  }\n\n  if (interactable.options.drop.checker) {\n    dropped = interactable.options.drop.checker(\n      dragEvent,\n      event,\n      dropped,\n      interactable,\n      dropElement,\n      draggable,\n      draggableElement,\n    )\n  }\n\n  return dropped\n}\n\nconst drop: Plugin = {\n  id: 'actions/drop',\n  install,\n  listeners: {\n    'interactions:before-action-start': ({ interaction }) => {\n      if (interaction.prepared.name !== 'drag') {\n        return\n      }\n\n      interaction.dropState = {\n        cur: {\n          dropzone: null,\n          element: null,\n        },\n        prev: {\n          dropzone: null,\n          element: null,\n        },\n        rejected: null,\n        events: null,\n        activeDrops: [],\n      }\n    },\n\n    'interactions:after-action-start': (\n      { interaction, event, iEvent: dragEvent }: DoPhaseArg<'drag', EventPhase>,\n      scope,\n    ) => {\n      if (interaction.prepared.name !== 'drag') {\n        return\n      }\n\n      const dropState = interaction.dropState!\n\n      // reset active dropzones\n      dropState.activeDrops = []\n      dropState.events = {}\n      dropState.activeDrops = getActiveDrops(scope, interaction.element!)\n      dropState.events = getDropEvents(interaction, event, dragEvent)\n\n      if (dropState.events.activate) {\n        fireActivationEvents(dropState.activeDrops, dropState.events.activate)\n        scope.fire('actions/drop:start', { interaction, dragEvent })\n      }\n    },\n\n    'interactions:action-move': onEventCreated,\n\n    'interactions:after-action-move': (\n      { interaction, iEvent: dragEvent }: DoPhaseArg<'drag', EventPhase>,\n      scope,\n    ) => {\n      if (interaction.prepared.name !== 'drag') {\n        return\n      }\n\n      const dropState = interaction.dropState!\n      fireDropEvents(interaction, dropState.events)\n\n      scope.fire('actions/drop:move', { interaction, dragEvent })\n      dropState.events = {}\n    },\n\n    'interactions:action-end': (arg: DoPhaseArg<'drag', EventPhase>, scope) => {\n      if (arg.interaction.prepared.name !== 'drag') {\n        return\n      }\n\n      const { interaction, iEvent: dragEvent } = arg\n\n      onEventCreated(arg, scope)\n      fireDropEvents(interaction, interaction.dropState!.events)\n      scope.fire('actions/drop:end', { interaction, dragEvent })\n    },\n\n    'interactions:stop': ({ interaction }) => {\n      if (interaction.prepared.name !== 'drag') {\n        return\n      }\n\n      const { dropState } = interaction\n\n      if (dropState) {\n        dropState.activeDrops = null as never\n        dropState.events = null as never\n        dropState.cur.dropzone = null as never\n        dropState.cur.element = null as never\n        dropState.prev.dropzone = null as never\n        dropState.prev.element = null as never\n        dropState.rejected = false\n      }\n    },\n  },\n  getActiveDrops,\n  getDrop,\n  getDropEvents,\n  fireDropEvents,\n  defaults: {\n    enabled: false,\n    accept: null as never,\n    overlap: 'pointer',\n  } as DropzoneOptions,\n}\n\nexport default drop\n"
	],
	"mappings": "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"
}