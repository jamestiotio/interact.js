{
	"version": 3,
	"names": [
		"browser",
		"domUtils",
		"is",
		"isNonNativeEvent",
		"warnOnce",
		"pointerUtils",
		"createInteractStatic",
		"scope",
		"interact",
		"target",
		"options",
		"interactable",
		"interactables",
		"getExisting",
		"new",
		"events",
		"global",
		"globalEvents",
		"getPointerAverage",
		"pointerAverage",
		"getTouchBBox",
		"touchBBox",
		"getTouchDistance",
		"touchDistance",
		"getTouchAngle",
		"touchAngle",
		"getElementRect",
		"getElementClientRect",
		"matchesSelector",
		"closest",
		"version",
		"use",
		"plugin",
		"usePlugin",
		"isSet",
		"get",
		"context",
		"on",
		"type",
		"listener",
		"string",
		"search",
		"trim",
		"split",
		"array",
		"eventType",
		"object",
		"prop",
		"actions",
		"push",
		"add",
		"document",
		"off",
		"index",
		"indexOf",
		"splice",
		"remove",
		"debug",
		"supportsTouch",
		"supportsPointerEvent",
		"stop",
		"interaction",
		"interactions",
		"list",
		"pointerMoveTolerance",
		"newValue",
		"number",
		"addDocument",
		"doc",
		"removeDocument"
	],
	"sources": [
		"InteractStatic.ts"
	],
	"sourcesContent": [
		"/** @module interact */\nimport type { Scope, Plugin } from '@interactjs/core/scope'\nimport type { Context, EventTypes, Listener, ListenersArg, Target } from '@interactjs/core/types'\nimport browser from '@interactjs/utils/browser'\nimport * as domUtils from '@interactjs/utils/domUtils'\nimport is from '@interactjs/utils/is'\nimport isNonNativeEvent from '@interactjs/utils/isNonNativeEvent'\nimport { warnOnce } from '@interactjs/utils/misc'\nimport * as pointerUtils from '@interactjs/utils/pointerUtils'\n\nimport type { Interactable } from './Interactable'\nimport type { Options } from './options'\n\ndeclare module '@interactjs/core/InteractStatic' {\n  export interface InteractStatic {\n    (target: Target, options?: Options): Interactable\n    getPointerAverage: typeof pointerUtils.pointerAverage\n    getTouchBBox: typeof pointerUtils.touchBBox\n    getTouchDistance: typeof pointerUtils.touchDistance\n    getTouchAngle: typeof pointerUtils.touchAngle\n    getElementRect: typeof domUtils.getElementRect\n    getElementClientRect: typeof domUtils.getElementClientRect\n    matchesSelector: typeof domUtils.matchesSelector\n    closest: typeof domUtils.closest\n    /** @internal */ globalEvents: any\n    version: string\n    /** @internal */ scope: Scope\n    use(\n      plugin: Plugin,\n      options?: {\n        [key: string]: any\n      },\n    ): any\n    isSet(target: Target, options?: any): boolean\n    on(type: string | EventTypes, listener: ListenersArg, options?: object): any\n    off(type: EventTypes, listener: any, options?: object): any\n    debug(): any\n    supportsTouch(): boolean\n    supportsPointerEvent(): boolean\n    stop(): any\n    pointerMoveTolerance(newValue?: number): any\n    addDocument(doc: Document, options?: object): void\n    removeDocument(doc: Document): void\n  }\n}\n\n// eslint-disable-next-line @typescript-eslint/consistent-type-imports\ntype _InteractStatic = import('@interactjs/core/InteractStatic').InteractStatic\n\nexport function createInteractStatic (scope: Scope): _InteractStatic {\n  /**\n   * ```js\n   * interact('#draggable').draggable(true)\n   *\n   * var rectables = interact('rect')\n   * rectables\n   *   .gesturable(true)\n   *   .on('gesturemove', function (event) {\n   *       // ...\n   *   })\n   * ```\n   *\n   * The methods of this variable can be used to set elements as interactables\n   * and also to change various default settings.\n   *\n   * Calling it as a function and passing an element or a valid CSS selector\n   * string returns an Interactable object which has various methods to configure\n   * it.\n   *\n   * @global\n   *\n   * @param {Element | string} target The HTML or SVG Element to interact with\n   * or CSS selector\n   * @return {Interactable}\n   */\n  const interact = ((target: Target, options: Options) => {\n    let interactable = scope.interactables.getExisting(target, options)\n\n    if (!interactable) {\n      interactable = scope.interactables.new(target, options)\n      interactable.events.global = interact.globalEvents\n    }\n\n    return interactable\n  }) as _InteractStatic\n\n  // expose the functions used to calculate multi-touch properties\n  interact.getPointerAverage = pointerUtils.pointerAverage\n  interact.getTouchBBox = pointerUtils.touchBBox\n  interact.getTouchDistance = pointerUtils.touchDistance\n  interact.getTouchAngle = pointerUtils.touchAngle\n\n  interact.getElementRect = domUtils.getElementRect\n  interact.getElementClientRect = domUtils.getElementClientRect\n  interact.matchesSelector = domUtils.matchesSelector\n  interact.closest = domUtils.closest\n\n  interact.globalEvents = {} as any\n\n  // eslint-disable-next-line no-undef\n  interact.version = process.env.npm_package_version\n  interact.scope = scope\n  /**\n   * Use a plugin\n   *\n   * @alias module:interact.use\n   *\n   */\n  interact.use = function (plugin, options) {\n    this.scope.usePlugin(plugin, options)\n\n    return this\n  }\n\n  /**\n   * Check if an element or selector has been set with the {@link interact}\n   * function\n   *\n   * @alias module:interact.isSet\n   *\n   * @param {Target} target The Element or string being searched for\n   * @param {object} options\n   * @return {boolean} Indicates if the element or CSS selector was previously\n   * passed to interact\n   */\n  interact.isSet = function (target: Target, options?: { context?: Context }): boolean {\n    return !!this.scope.interactables.get(target, options && options.context)\n  }\n\n  /**\n   * @deprecated\n   * Add a global listener for an InteractEvent or adds a DOM event to `document`\n   *\n   * @alias module:interact.on\n   *\n   * @param {string | array | object} type The types of events to listen for\n   * @param {function} listener The function event (s)\n   * @param {object | boolean} [options] object or useCapture flag for\n   * addEventListener\n   * @return {object} interact\n   */\n  interact.on = warnOnce(function on (type: string | EventTypes, listener: ListenersArg, options?: object) {\n    if (is.string(type) && type.search(' ') !== -1) {\n      type = type.trim().split(/ +/)\n    }\n\n    if (is.array(type)) {\n      for (const eventType of type as any[]) {\n        this.on(eventType, listener, options)\n      }\n\n      return this\n    }\n\n    if (is.object(type)) {\n      for (const prop in type) {\n        this.on(prop, (type as any)[prop], listener)\n      }\n\n      return this\n    }\n\n    // if it is an InteractEvent type, add listener to globalEvents\n    if (isNonNativeEvent(type, this.scope.actions)) {\n      // if this type of event was never bound\n      if (!this.globalEvents[type]) {\n        this.globalEvents[type] = [listener]\n      } else {\n        this.globalEvents[type].push(listener)\n      }\n    }\n    // If non InteractEvent type, addEventListener to document\n    else {\n      this.scope.events.add(this.scope.document, type, listener as Listener, { options })\n    }\n\n    return this\n  }, 'The interact.on() method is being deprecated')\n\n  /**\n   * @deprecated\n   * Removes a global InteractEvent listener or DOM event from `document`\n   *\n   * @alias module:interact.off\n   *\n   * @param {string | array | object} type The types of events that were listened\n   * for\n   * @param {function} listener The listener function to be removed\n   * @param {object | boolean} options [options] object or useCapture flag for\n   * removeEventListener\n   * @return {object} interact\n   */\n  interact.off = warnOnce(function off (type: EventTypes, listener: any, options?: object) {\n    if (is.string(type) && type.search(' ') !== -1) {\n      type = type.trim().split(/ +/)\n    }\n\n    if (is.array(type)) {\n      for (const eventType of type) {\n        this.off(eventType, listener, options)\n      }\n\n      return this\n    }\n\n    if (is.object(type)) {\n      for (const prop in type) {\n        this.off(prop, type[prop], listener)\n      }\n\n      return this\n    }\n\n    if (isNonNativeEvent(type, this.scope.actions)) {\n      let index: number\n\n      if (type in this.globalEvents && (index = this.globalEvents[type].indexOf(listener)) !== -1) {\n        this.globalEvents[type].splice(index, 1)\n      }\n    } else {\n      this.scope.events.remove(this.scope.document, type, listener, options)\n    }\n\n    return this\n  }, 'The interact.off() method is being deprecated')\n\n  interact.debug = function () {\n    return this.scope\n  }\n\n  /**\n   * @alias module:interact.supportsTouch\n   *\n   * @return {boolean} Whether or not the browser supports touch input\n   */\n  interact.supportsTouch = function () {\n    return browser.supportsTouch\n  }\n\n  /**\n   * @alias module:interact.supportsPointerEvent\n   *\n   * @return {boolean} Whether or not the browser supports PointerEvents\n   */\n  interact.supportsPointerEvent = function () {\n    return browser.supportsPointerEvent\n  }\n\n  /**\n   * Cancels all interactions (end events are not fired)\n   *\n   * @alias module:interact.stop\n   *\n   * @return {object} interact\n   */\n  interact.stop = function () {\n    for (const interaction of this.scope.interactions.list) {\n      interaction.stop()\n    }\n\n    return this\n  }\n\n  /**\n   * Returns or sets the distance the pointer must be moved before an action\n   * sequence occurs. This also affects tolerance for tap events.\n   *\n   * @alias module:interact.pointerMoveTolerance\n   *\n   * @param {number} [newValue] The movement from the start position must be greater than this value\n   * @return {interact | number}\n   */\n  interact.pointerMoveTolerance = function (newValue?: number) {\n    if (is.number(newValue)) {\n      this.scope.interactions.pointerMoveTolerance = newValue\n\n      return this\n    }\n\n    return this.scope.interactions.pointerMoveTolerance\n  }\n\n  interact.addDocument = function (doc: Document, options?: object) {\n    this.scope.addDocument(doc, options)\n  }\n\n  interact.removeDocument = function (doc: Document) {\n    this.scope.removeDocument(doc)\n  }\n\n  return interact\n}\n"
	],
	"mappings": "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"
}